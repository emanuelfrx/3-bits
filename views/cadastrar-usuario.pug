extends layout-menu

block content
  .content
    h1 Cadastrar Usuário
    form#usuario-form.pure-form.pure-form-stacked(action="/cadastrar-usuario", method="POST")
      label(for="email") E-mail:
      input(type="email", id="email", name="email", required, autocomplete="off", placeholder="example@gmail.com")

      label(for="senha") Senha:
      input(type="password", id="senha", name="senha", placeholder="ex: teste123" required)

      button.pure-button.pure-button-primary(type="submit") Cadastrar Usuário

    p#success-message(style="display: none; color: green;") Usuário cadastrado com sucesso!
    p#error-message(style="display: none; color: red;") Erro ao cadastrar usuário.

    script.
      document.getElementById('usuario-form').onsubmit = async function(event) {
        event.preventDefault(); // Previne o envio padrão do formulário
        
        const formData = new FormData(this); // Cria um FormData com os dados do formulário
        const email = formData.get('email');
        const senha = formData.get('senha');

        try {
          const response = await fetch('/cadastrar-usuario', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ email, senha }),
          });
          
          if (!response.ok) {
            throw new Error('Erro ao cadastrar usuário');
          }

          const message = document.getElementById('success-message');
          message.style.display = 'block'; // Mostra a mensagem de sucesso
          message.innerText = 'Usuário cadastrado com sucesso!';

          // Limpa os inputs
          this.reset();
        } catch (error) {
          console.error(error);
          const errorMessage = document.getElementById('error-message');
          errorMessage.style.display = 'block'; // Mostra a mensagem de erro
          errorMessage.innerText = 'Erro ao cadastrar usuário.';
        }
      };
